From 0bc6e4793ea10faf24f86ab92c2239d9c9b15b08 Mon Sep 17 00:00:00 2001
From: Thomas Lamprecht <t.lamprecht@proxmox.com>
Date: Wed, 6 Apr 2016 14:24:28 +0200
Subject: [PATCH 48/52] BDRV_O_CACHE_WB was removed

see: 61de4c680846167e01d7ba42bf787f8d1d80bf5e
---
 blockdev.c     | 2 +-
 savevm-async.c | 4 ++--
 vma.c          | 4 ++--
 3 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/blockdev.c b/blockdev.c
index 24e0ed5..7c8d212 100644
--- a/blockdev.c
+++ b/blockdev.c
@@ -3362,7 +3362,7 @@ UuidInfo *qmp_backup(const char *backup_file, bool has_format,
             const char *devname = bdrv_get_device_name(di->bs);
             snprintf(di->targetfile, PATH_MAX, "%s/%s.raw", backup_dir, devname);
 
-            int flags = BDRV_O_RDWR|BDRV_O_CACHE_WB;
+            int flags = BDRV_O_RDWR;
             bdrv_img_create(di->targetfile, "raw", NULL, NULL, NULL,
                             di->size, flags, &local_err, false);
             if (local_err) {
diff --git a/savevm-async.c b/savevm-async.c
index 4d73e66..2c41b17 100644
--- a/savevm-async.c
+++ b/savevm-async.c
@@ -253,7 +253,7 @@ void qmp_savevm_start(bool has_statefile, const char *statefile, Error **errp)
 {
     Error *local_err = NULL;
 
-    int bdrv_oflags = BDRV_O_CACHE_WB | BDRV_O_RDWR;
+    int bdrv_oflags = BDRV_O_RDWR;
     int ret;
 
     if (snap_state.state != SAVE_STATE_DONE) {
@@ -485,7 +485,7 @@ int load_state_from_blockdev(const char *filename)
     int ret;
 
     bs = bdrv_new();
-    ret = bdrv_open(&bs, filename, NULL, NULL, BDRV_O_CACHE_WB, &local_err);
+    ret = bdrv_open(&bs, filename, NULL, NULL, 0, &local_err);
     error_setg(&blocker, "block device is in use by load state");
     bdrv_op_block_all(bs, blocker);
 
diff --git a/vma.c b/vma.c
index c3db633..c1407d3 100644
--- a/vma.c
+++ b/vma.c
@@ -277,7 +277,7 @@ static int extract_content(int argc, char **argv)
         } else if (di) {
             char *devfn = NULL;
             const char *format = NULL;
-            int flags = BDRV_O_RDWR|BDRV_O_CACHE_WB;
+            int flags = BDRV_O_RDWR;
             bool write_zero = true;
 
             if (readmap) {
@@ -558,7 +558,7 @@ static int create_archive(int argc, char **argv)
         Error *errp = NULL;
         BlockDriverState *bs = bdrv_new();
 
-        res = bdrv_open(&bs, path, NULL, NULL, BDRV_O_CACHE_WB, &errp);
+        res = bdrv_open(&bs, path, NULL, NULL, 0, &errp);
         if (res < 0) {
             unlink(archivename);
             g_error("bdrv_open '%s' failed - %s", path, error_get_pretty(errp));
-- 
2.1.4

